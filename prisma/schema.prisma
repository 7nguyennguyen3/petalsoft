// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  fulfilled
  shipped
  awaiting_shipment
}

model PRODUCTS {
  id          Int        @id @default(autoincrement())
  price       Float
  imgSrc      String
  reviews     Int?
  title       String
  description String?
  category    String?
  stock       Int
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  lineItems   LineItem[]
}

model User {
  id        String   @id
  email     String
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id                String           @id @default(uuid())
  userId            String
  email             String?
  User              User             @relation(fields: [userId], references: [id])
  lineItems         LineItem[]
  total             Float
  isPaid            Boolean          @default(false)
  status            OrderStatus
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  shippingAddress   ShippingAddress? @relation(fields: [shippingAddressId], references: [id])
  shippingAddressId String?
  token             String?
}

model LineItem {
  id        Int      @id @default(autoincrement())
  orderId   String
  order     Order    @relation(fields: [orderId], references: [id])
  productId Int
  product   PRODUCTS @relation(fields: [productId], references: [id])
  quantity  Int
  price     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Create a new Address model
model ShippingAddress {
  id          String  @id @default(cuid())
  name        String
  street      String
  city        String
  postalCode  String
  country     String
  state       String?
  phoneNumber String?
  Order       Order[]
}

model TestStripeWebhook {
  id     String @id @default(cuid())
  object Json?
}
